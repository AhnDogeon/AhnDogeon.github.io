[{"categories":["dev"],"content":"This article shows the basic Markdown syntax and format.","date":"2022-07-31","objectID":"/make_blog/","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":" Hugo를 학습하고 나만의 블로그를 만들어 배포해보자. 먼저, 개발 의지력과 도움을 준 Minwook Jae 감사합니다. 이직 후에 내 개발 블로그를 만들어야지, 만들어야지 하다가 가장 개발자로서 존경하는 전회사 동기의 한 마디와 포스팅 덕에 시작하게 되었다. 많은 github.io 블로그에 사용된 Jekyll 를 사용할까 했었으나, 무엇보다 Hugo를 선택한 이유는, 리스펙하는 동료가 사용해서라는 단순한 이유였다. 현재 블로그에는 개발관련 공부 내용과 정리, 업무 내용을 포스팅 예정이고, 나의 관심사, 취미, 일상은 현재 운영 중인 티스토리에 분할하여 운영하려고 한다. ","date":"2022-07-31","objectID":"/make_blog/:0:0","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"1. 환경설정 ","date":"2022-07-31","objectID":"/make_blog/:1:0","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"Hugo 설치 # hugo install $ brew install hugo # check $ hugo version ","date":"2022-07-31","objectID":"/make_blog/:1:1","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"Github 리포 생성 ​ Github.io 리포에 바로 만들어도 되겠지만, 템플릿과 Hugo를 이용해 만들려면 아래 두 개 리포를 만들어둔다.(blog의 이름은 자유) ​ blog ​ \u003cgithub name\u003e.github.io ","date":"2022-07-31","objectID":"/make_blog/:1:3","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"Hugo 프로젝트 생성 # hugo 프로젝트 생성 $ hugo new site blog # 생성 완료되면 출력 문구 Congratulations! Your new Hugo site is created in /Users/user/Workspaces/blog. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \"hugo new theme \u003cTHEMENAME\u003e\" command. 2. Perhaps you want to add some content. You can add single files with \"hugo new \u003cSECTIONNAME\u003e/\u003cFILENAME\u003e.\u003cFORMAT\u003e\". 3. Start the built-in live server via \"hugo server\". Visit https://gohugo.io/ for quickstart guide and full documentation. ","date":"2022-07-31","objectID":"/make_blog/:1:4","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"테마 설치 $ git init # 브랜치를 main으로 변경 $ git branch -M main # git remote add origin \u003cYOUR ROOT REPOSITORY\u003e $ git remote add origin https://github.com/ahndogeon/blog.git # git submodule add https://github.com/\u003ctheme 경로\u003e.git themes/\u003ctheme 이름\u003e $ git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt $ cp themes/hugo-tranquilpeak-theme/exampleSite/config.toml config.toml copy한 config.toml을 내 블로그에 맞게 수정해준다. BaseURL을 수정하고, 각 텍스트를 내 블로그에 맞게 수정해줬다. 이러면 대략적인 베이스 준비는 끝났다. 터미널에서 서버를 실행시켜주고 로컬에서 확인해보자. $ hugo server Start building sites … hugo v0.89.4+extended darwin/amd64 BuildDate=unknown | EN-US -------------------+-------- Pages | 9 Paginator pages | 0 Non-page files | 0 Static files | 4 Processed images | 0 Aliases | 1 Sitemaps | 1 Cleaned | 0 Built in 9 ms Watching for changes in /Users/user/workspace/blog/{archetypes,content,data,layouts,static,themes} Watching for config changes in /Users/user/workspace/blog/config.toml Environment: \"development\" Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop ","date":"2022-07-31","objectID":"/make_blog/:1:5","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"2. Git 리포 연결 및 간편 배포 스크립트 작성 blog에 Github blog, blog/public에 Github \u003cusername\u003e.github.io를 연결한다. # blog -\u003e blog 레포지토리 연결 # git remote add origin http://github.com/\u003cusername\u003e/blog.git $ git remote add origin https://github.com/ahndogeon/blog.git # blog/public -\u003e \u003cusername\u003e.github.io 연결 # git submodule add -b main http://github.com/\u003cusername\u003e/\u003cusername\u003e.github.io.git public $ git submodule add -b main http://github.com/ahndogeon/ahndogeon.github.io.git public 배포는 역시 deploy.sh 로 간편하게 하는 것이 최고다. blog/deploy.sh #!/bin/sh # If a command fails then the deploy stops set -e printf \"\\033[0;32mDeploying updates to GitHub...\\033[0m\\n\" printf \"\\033[0;32mBuild the project.\\033[0m\\n\" hugo -D # hugo -t timeline # if using a theme, replace with `hugo -t \u003cYOURTHEME\u003e` printf \"\\033[0;32m Go To Public folder \\033[0m\\n\" cd public printf \"\\033[0;32m Setting for submodule commit \\033[0m\\n\" git config --local user.name \"#######\" git config --local user.email \"######\" git submodule update --init --recursive printf \"\\033[0;32m Add changes to git. \\033[0m\\n\" git add . printf \"\\033[0;32m Commit changes.. \\033[0m\\n\" msg=\"rebuilding site $(date)\" if [ -n \"$*\" ]; then msg=\"$*\" fi git commit -m \"$msg\" printf \"\\033[0;32m Push blog(presentation) source and build repos. \\033[0m\\n\" git push origin main printf \"\\033[0;32m Come Back up to the Project Root \\033[0m\\n\" cd .. echo $pwd printf \"\\033[0;32m root repository Commit \u0026 Push. \\033[0m\\n\" git add . msg=\"rebuilding site `date`\" if [ $# -eq 1 ] then msg=\"$1\" fi git commit -m \"$msg\" git push origin main 터미널에서 chmod 파일 권한을 주고 실행하면? # deploy.sh 실행 파일 권한 부여 $ chmod 777 deploy.sh # 배포 실행 $ ./deploy.sh 커피 한 잔 하고 오면 https://ahndogeon.github.io 에서 나만의 블로그를 볼 수 있다. 앞으로도 포스팅 후에는 ./deploy.sh 명령어 하나로 배포할 수 있다. 블로그가 어느 정도 활성화되면 google adsense 를 추가해야겠다. ","date":"2022-07-31","objectID":"/make_blog/:2:0","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["dev"],"content":"3. 정리하며. 간단한 블로그 배포에도 결국 트러블 슈팅에 시간을 꽤 잡아먹었다. 우선 빠르게 두 가지 개발 블로그 배포, 입사 후 지금까지 플젝 정리 가 필요하여, 동기의 추천 테마를 사용해 빠르게 배포하였다. 조금의 시간과 의지가 허락한다면, 테마가 아닌 AtoZ로 개발하고 싶긴하다.(언제가 될지..) 사실 지금까지 개발자로 지내며, 공유하고 싶은 내용이 산더미다. 그것부터 진행하고 싶다. 부서 특성 상 좋은 기회로 여러 프로젝트를 할 수 있었다. 게임 개발, 람다 활용한 API 서버 개발, 개인적으로 진행한 사이드 프로젝트도 한 번 정리하는 시간을 가져야겠다. ","date":"2022-07-31","objectID":"/make_blog/:3:0","tags":["Web","HUGO"],"title":"블로그를 만들어보자","uri":"/make_blog/"},{"categories":["Markdown"],"content":"This article shows the basic Markdown syntax and format.","date":"2022-07-28","objectID":"/initial_post/","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":" This article offers a sample of basic Markdown syntax that can be used in Hugo content files. Note This article is a shameful copy of the great Grav original page. If you want to know about the extented Markdown syntax of LoveIt theme, please read extended Markdown syntax page. Let’s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages. Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it. Some of the key benefits are: Markdown is simple to learn, with minimal extra characters, so it’s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this: The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. – John Gruber Without further delay, let us go over the main elements of Markdown and what the resulting HTML looks like! Tip  Bookmark this page for easy future reference! ","date":"2022-07-28","objectID":"/initial_post/:0:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"1. Headings Headings from h2 through h6 are constructed with a # for each level: ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading The HTML looks like this: \u003ch2\u003eh2 Heading\u003c/h2\u003e \u003ch3\u003eh3 Heading\u003c/h3\u003e \u003ch4\u003eh4 Heading\u003c/h4\u003e \u003ch5\u003eh5 Heading\u003c/h5\u003e \u003ch6\u003eh6 Heading\u003c/h6\u003e Heading IDs To add a custom heading ID, enclose the custom ID in curly braces on the same line as the heading: ### A Great Heading {#custom-id} The HTML looks like this: \u003ch3 id=\"custom-id\"\u003eA Great Heading\u003c/h3\u003e ","date":"2022-07-28","objectID":"/initial_post/:1:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"2. Comments Comments should be HTML compatible. \u003c!-- This is a comment --\u003e Comment below should NOT be seen: ","date":"2022-07-28","objectID":"/initial_post/:2:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"3. Horizontal Rules The HTML \u003chr\u003e element is for creating a “thematic break” between paragraph-level elements. In Markdown, you can create a \u003chr\u003e with any of the following: ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks The rendered output looks like this: ","date":"2022-07-28","objectID":"/initial_post/:3:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"4. Body Copy Body copy written as normal, plain text will be wrapped with \u003cp\u003e\u003c/p\u003e tags in the rendered HTML. So this body copy: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. The HTML looks like this: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e A line break can be done with one blank line. ","date":"2022-07-28","objectID":"/initial_post/:4:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"5. Inline HTML If you need a certain HTML tag (with a class) you can simply use HTML: Paragraph in Markdown. \u003cdiv class=\"class\"\u003e This is \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Paragraph in Markdown. ","date":"2022-07-28","objectID":"/initial_post/:5:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"6. Emphasis ","date":"2022-07-28","objectID":"/initial_post/:6:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"6.1. Bold For emphasizing a snippet of text with a heavier font-weight. The following snippet of text is rendered as bold text. **rendered as bold text** __rendered as bold text__ The HTML looks like this: \u003cstrong\u003erendered as bold text\u003c/strong\u003e ","date":"2022-07-28","objectID":"/initial_post/:6:1","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"6.2. Italics For emphasizing a snippet of text with italics. The following snippet of text is rendered as italicized text. *rendered as italicized text* _rendered as italicized text_ The HTML looks like this: \u003cem\u003erendered as italicized text\u003c/em\u003e ","date":"2022-07-28","objectID":"/initial_post/:6:2","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"6.3. Strikethrough In GFMGitHub flavored Markdown you can do strikethroughs. ~~Strike through this text.~~ The rendered output looks like this: Strike through this text. The HTML looks like this: \u003cdel\u003eStrike through this text.\u003c/del\u003e ","date":"2022-07-28","objectID":"/initial_post/:6:3","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"6.4. Combination Bold, italics, and strikethrough can be used in combination. ***bold and italics*** ~~**strikethrough and bold**~~ ~~*strikethrough and italics*~~ ~~***bold, italics and strikethrough***~~ The rendered output looks like this: bold and italics strikethrough and bold strikethrough and italics bold, italics and strikethrough The HTML looks like this: \u003cem\u003e\u003cstrong\u003ebold and italics\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003estrikethrough and bold\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003estrikethrough and italics\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003ebold, italics and strikethrough\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2022-07-28","objectID":"/initial_post/:6:4","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"7. Blockquotes For quoting blocks of content from another source within your document. Add \u003e before any text you want to quote: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The rendered output looks like this: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. The HTML looks like this: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e Blockquotes can also be nested: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. The rendered output looks like this: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2022-07-28","objectID":"/initial_post/:7:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"8. Lists ","date":"2022-07-28","objectID":"/initial_post/:8:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"8.1. Unordered A list of items in which the order of the items does not explicitly matter. You may use any of the following symbols to denote bullets for each list item: * valid bullet - valid bullet + valid bullet For example: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2022-07-28","objectID":"/initial_post/:8:1","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"8.2. Ordered A list of items in which the order of items does explicitly matter. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem The HTML looks like this: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e Tip If you just use 1. for each number, Markdown will automatically number each item. For example: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem The rendered output looks like this: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2022-07-28","objectID":"/initial_post/:8:2","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"8.3. Task Lists Task lists allow you to create a list of items with checkboxes. To create a task list, add dashes (-) and brackets with a space ([ ]) before task list items. To select a checkbox, add an x in between the brackets ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media The rendered output looks like this: Write the press release Update the website Contact the media ","date":"2022-07-28","objectID":"/initial_post/:8:3","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"9. Code ","date":"2022-07-28","objectID":"/initial_post/:9:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"9.1. Inline Code Wrap inline snippets of code with `. In this example, `\u003csection\u003e\u003c/section\u003e` should be wrapped as **code**. The rendered output looks like this: In this example, \u003csection\u003e\u003c/section\u003e should be wrapped as code. The HTML looks like this: \u003cp\u003e In this example, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e should be wrapped with \u003cstrong\u003ecode\u003c/strong\u003e. \u003c/p\u003e ","date":"2022-07-28","objectID":"/initial_post/:9:1","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"9.2. Indented Code Or indent several lines of code by at least four spaces, as in: // Some comments line 1 of code line 2 of code line 3 of code The rendered output looks like this: // Some comments line 1 of code line 2 of code line 3 of code The HTML looks like this: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2022-07-28","objectID":"/initial_post/:9:2","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"9.3. Block Fenced Code Use “fences” ``` to block in multiple lines of code with a language attribute. ```markdown Sample text here... ``` The HTML looks like this: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2022-07-28","objectID":"/initial_post/:9:3","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"9.4. Syntax Highlighting GFMGitHub Flavored Markdown also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code “fence”, ```js, and syntax highlighting will automatically be applied in the rendered HTML. For example, to apply syntax highlighting to JavaScript code: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` The rendered output looks like this: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Note Syntax highlighting page in Hugo Docs introduces more about syntax highlighting, including highlight shortcode. ","date":"2022-07-28","objectID":"/initial_post/:9:4","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"10. Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. The HTML looks like this: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e Right or center aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column. Adding colons on both sides of the dashes below any heading will center align text for that column. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | The rendered output looks like this: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. | | ","date":"2022-07-28","objectID":"/initial_post/:10:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"11. Links ","date":"2022-07-28","objectID":"/initial_post/:11:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"11.1. Basic Link \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) The rendered output looks like this (hover over the link, there is no tooltip): https://assemble.io contact@revolunet.com Assemble The HTML looks like this: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2022-07-28","objectID":"/initial_post/:11:1","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"11.2. Add a Title [Upstage](https://github.com/upstage/ \"Visit Upstage!\") The rendered output looks like this (hover over the link, there should be a tooltip): Upstage The HTML looks like this: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2022-07-28","objectID":"/initial_post/:11:2","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"11.3. Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. Note The specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works. ","date":"2022-07-28","objectID":"/initial_post/:11:3","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"12. Footnotes Footnotes allow you to add notes and references without cluttering the body of the document. When you create a footnote, a superscript number with a link appears where you added the footnote reference. Readers can click the link to jump to the content of the footnote at the bottom of the page. To create a footnote reference, add a caret and an identifier inside brackets ([^1]). Identifiers can be numbers or words, but they can’t contain spaces or tabs. Identifiers only correlate the footnote reference with the footnote itself — in the output, footnotes are numbered sequentially. Add the footnote using another caret and number inside brackets with a colon and text ([^1]: My footnote.). You don’t have to put footnotes at the end of the document. You can put them anywhere except inside other elements like lists, block quotes, and tables. This is a digital footnote[^1]. This is a footnote with \"label\"[^label] [^1]: This is a digital footnote [^label]: This is a footnote with \"label\" This is a digital footnote1. This is a footnote with “label”2 ","date":"2022-07-28","objectID":"/initial_post/:12:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"},{"categories":["Markdown"],"content":"13. Images Images have a similar syntax to links but include a preceding exclamation point. ![Minion](https://octodex.github.com/images/minion.png) or: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The Stormtroopocat Like links, images also have a footnote style syntax: ![Alt text][id] The Dojocat With a reference later in the document defining the URL location: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" This is a digital footnote ↩︎ This is a footnote with “label” ↩︎ ","date":"2022-07-28","objectID":"/initial_post/:13:0","tags":["Markdown","HTML"],"title":"Initial Post","uri":"/initial_post/"}]